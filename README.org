#+AUTHOR: BuddhiLW and JP
#+PROPERTY: header-args:js :tangle ./code/js/quizz-game.js :mkdirp yes

* Project Buzz Quizz
 By Jota and BuddhiLW

** About the Buzz Quizz folder-structure

In =code= we find our code-base. And, in =resources= we store images, icons, fonts etc used in the project.
#+begin_src shell
  .
  |-- code
  |   |-- css
  |   |-- html
  |   `-- js
  `-- resources
#+end_src

** Layout 1
Worked out in conjunction.

** Layout 2 
LW
*** JS
**** DONE Common functions (query, queryAll, listen);
CLOSED: [2021-04-20 Tue 22:13]
:LOGBOOK:
- State "DONE"       from "NEXT"       [2021-04-20 Tue 22:13]
:END:
Here we define these in a functional way, and give an example code.
#+begin_src js
  let querier = c => document.querySelector(c);
  let querierAll = c => document.querySelectorAll(c);
  let querierElement = e => c => e.querySelector(c);
  let listen = element => event => f => element.addEventListener(event, f);

  let hello = () => console.log("Hello, I'm listening");

  var images = querierAll("div.quizz.screen2#q1 div.img"); //=> element
  // listen(images[1])("click")(hello);
#+end_src
**** TODO Populate with atomic-quizzes

**** DONE Change opacity, if one is selected
CLOSED: [2021-04-20 Tue 22:11]
:LOGBOOK:
- State "DONE"       from "NEXT"       [2021-04-20 Tue 22:11]
:END:
***** DONE Query all images in the (atomic-quizz 1).
CLOSED: [2021-04-20 Tue 22:10]
:LOGBOOK:
- State "DONE"       from "NEXT"       [2021-04-20 Tue 22:10]
:END:
#+begin_src js
  const cards = document.querySelectorAll("div.quizz.screen2 div.img");
 #+end_src

***** DONE Put listeners in the (selectec atomic-)quizz cards
CLOSED: [2021-04-20 Tue 22:10]
:LOGBOOK:
- State "DONE"       from "NEXT"       [2021-04-20 Tue 22:10]
:END:
****** DONE create a function which selects all the atomic-quizzes and apply activate listeners.
CLOSED: [2021-04-20 Tue 22:09]
:LOGBOOK:
- State "DONE"       from "NEXT"       [2021-04-20 Tue 22:09]
:END:
#+begin_src js
  cards.forEach((card) => {
      card.addEventListener("click", selectCard);
  });

  let activateListeners = atomicQuizzDOM => {
      atomicQuizzDOM.forEach((card) => {
          card.addEventListener("click", selectCard);
      });
  };

  let deactivateListeners = atomicQuizzDOM => {
      atomicQuizzDOM.forEach((card) => {
          card.removeEventListener("click", selectCard);
      });
  };
#+end_src

***** DONE Function which toggles one unique element, in selected group.
CLOSED: [2021-04-20 Tue 22:10]
:LOGBOOK:
- State "DONE"       from "NEXT"       [2021-04-20 Tue 22:10]
:END:

****** Navigate through DOM elements function; add and remove Class
#+begin_src js
  let addClass = e => c => e.classList.add(c);
  let removeClass = e => c => e.classList.remove(c);
  let lastNode = node => node.lastElementChild;
#+end_src 

****** Toggle image and subtitle visibility of the card (subtitle toggle not requied)
The condition of toggability is that the card have a header (subtitle explaining it)
#+begin_src js 
  let toggleOpacity = card => {
      if (lastNode(card) !== null) {
          addClass(card)("hidden-opacity");
          addClass(lastNode(card))("hidden-name");
      }
  };

  let untoggleOpacity = (e) => {
      addClass(e)("card-border");
      removeClass(e)("hidden-opacity");
      removeClass(lastNode(e))("hidden-name");
  };
#+end_src

******  Toggler logic
        + The existence condition to the funtion to work is the existence of h2 (subtitle).
        + Add  this line, in the forEach statement, in case you want to habilitate other cards's selection: =card.classList.remove("card-border");=.
In plain English, as the function receives an element (a query selected one), it:
1. Creates an array out of it, so to operate on it.
2. Toggle opacity to every card.
3. Untoggles the selected card.
4. Deactivate the Listeners, thus locking the card selection.
5. Scroll to the next card.
# let focus = () => querier('#last').scrollIntoView();  
#+begin_src js
  function selectCard(e) {
      const closestLi = this.closest('li').nextElementSibling;
      const children = Array.from(this.parentElement.children);
      children.forEach((card) => toggleOpacity(card));
      untoggleOpacity(this);
      deactivateListeners(children);
      allSelectedP(querierAll('.card-border'))(closestLi);
  };
#+end_src

***** TODO Change text color, if selection is right or wrong

**** DONE Check if all atomic-quizzes are selected and decide what to do next.
CLOSED: [2021-04-20 Tue 22:09]
:LOGBOOK:
- State "DONE"       from "NEXT"       [2021-04-20 Tue 22:09]
:END:
***** DONE All atomic-quizzers selected preposition-function
CLOSED: [2021-04-20 Tue 22:07]
:LOGBOOK:
- State "DONE"       from "NEXT"       [2021-04-20 Tue 22:07]
:END:
#+begin_src js
  var allLi = querierAll('li');
  var allSelectedP = selected => nextLi =>
      (selected.length === allLi.length ?
       resultsLayout() :
       scrollNextElement(nextLi));
#+end_src
***** DONE Scroll Next function
CLOSED: [2021-04-20 Tue 22:07]
:LOGBOOK:
- State "DONE"       from "NEXT"       [2021-04-20 Tue 22:07]
:END:
#+begin_src js :tangle ../js/.js
  var scroll = e => e.scrollIntoView({behavior: "smooth"});

  var scrollNextElement = e => {
      let scrollNext = () => scroll(e);
      setTimeout(scrollNext, 2000);
  };
#+end_src

**** TODO Change to results-page layout function
#+begin_src js 
  var resultsLayout = () => {
      let alertYes = () => alert("Yes");
      setTimeout(alertYes, 2000);
  };
#+end_src
***** TODO Categorize which level the user is ranked.

***** TODO Reinitialize (all atomic-)quizz(es).

***** TODO Back to home-page

*** HTML
+ I will use mainly the core header layout from index.html
**** Header (imports and metadata)
#+begin_src html :tangle ./code/html/screen2.html  :mkdirp yes
  <!DOCTYPE html>
  <html lang="en">

  <head>
      <meta charset="UTF-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <link rel="stylesheet" href="../css/reset.css" class="rel">
      <link rel="stylesheet" href="../css/styles.css" class="rel">
      <link href="../css/quizz.css" rel="stylesheet"/>

      <title>Taking the Quizz</title>

  </head>
#+end_src

**** Body
***** General header
#+begin_src html :tangle ./code/html/screen2.html
<body>
    <div class="header screen2">
        <p>BuzzQuizz</p>
    </div>
#+end_src
***** Quizz-logo header
#+begin_src html :tangle ./code/html/screen2.html  :mkdirp yes
  <div class="quizz-logo">
      <h1>Logo</h1>
  </div>
#+end_src

***** Populate with question-quizzes 
#+begin_src html :tangle ./code/html/screen2.html  :mkdirp yes
  <div class="quizzes screen2">

    <ul>

      <li id="quizz1">
        <!-- begin first atomic-quizz -->
        <h1>Some aleatory question</h1>
        <div class="quizz screen2">

          <div class="img" id="op1">
            <img alt="" src="https://i.ytimg.com/vi/4c6YlDjMCzM/hqdefault.jpg" />
            <h2>A horse</h2>
          </div>
          <div class="img" id="op2">
            <img alt="" src="https://i.ytimg.com/vi/4c6YlDjMCzM/hqdefault.jpg" />
            <h2>A horse</h2>
          </div>
          <div class="img" id="op3">
            <img alt="" src="https://i.ytimg.com/vi/4c6YlDjMCzM/hqdefault.jpg" />
            <h2>A horse</h2>
          </div>
          <div class="img" id="op4">
            <img alt="" src="https://i.ytimg.com/vi/4c6YlDjMCzM/hqdefault.jpg" />
            <h2>A horse</h2>
          </div>

        </div>
        <!-- end first atomic-quizz -->
      </li>
    
      <li id="quizz2">
        <!-- begin second atomic-quizz -->
        <h1>Some aleatory question</h1>

        <div class="quizz screen2">

          <div class="img" id="op1">
            <img alt="" src="https://i.ytimg.com/vi/4c6YlDjMCzM/hqdefault.jpg" />
            <h2>A horse</h2>
          </div>
          <div class="img" id="op2">
            <img alt="" src="https://i.ytimg.com/vi/4c6YlDjMCzM/hqdefault.jpg" />
            <h2>A horse</h2>
          </div>
          <div class="img" id="op3">
            <img alt="" src="https://i.ytimg.com/vi/4c6YlDjMCzM/hqdefault.jpg" />
            <h2>A horse</h2>
          </div>
          <div class="img" id="op4">
            <img alt="" src="https://i.ytimg.com/vi/4c6YlDjMCzM/hqdefault.jpg" />
            <h2>A horse</h2>
          </div>

        </div>
        <!-- end second atomic-quizz -->
      </li>
    </ul>
  </div>
#+end_src
***** Togglable score
#+begin_src html :tangle ./code/html/screen2.html  :mkdirp yes
  <div class="score hidden"></div>
#+end_src

***** Foot (scripts)
#+begin_src html :tangle ./code/html/screen2.html  :mkdirp yes
  <script src="../js/quizz-game.js"></script>
  </body>
#+end_src
*** CSS
**** DONE Quizz-logo header (first requisite)
CLOSED: [2021-04-20 Tue 11:23]
:LOGBOOK:
- State "DONE"       from "NEXT"       [2021-04-20 Tue 11:23]
:END:
#+begin_src css :tangle ./code/css/quizz.css  :mkdirp yes
  .quizz-logo {
      display: flex;
      justify-content: center;
      margin-top: 69px;
      height: 142px;
      width: 100%;
      background-color: rgb(0, 0, 0, 0.6);
      background-repeat: no-repeat;
      background-position: center;
      background-image: url("https://static1.srcdn.com/wordpress/wp-content/uploads/2020/05/HP-Hogwarts-Featured.jpg");
      object-fit: cover;
      opacity: 0.8;
  }

  .quizz-logo h1 {
      color: #fff;
      font-size: 10vh;
      text-align: center;
      margin: auto 0;
      font-weight: 400;
  }

#+end_src

**** DONE Div containing a atomic-quizz
CLOSED: [2021-04-20 Tue 12:10]
:LOGBOOK:
- Note taken on [2021-04-20 Tue 12:26] \\
  Size internal images to fit the hole header
- State "DONE"       from "NEXT"       [2021-04-20 Tue 12:10]
:END:
***** DONE Exterior divs partitions and margins
CLOSED: [2021-04-20 Tue 12:25]
:LOGBOOK:
- State "DONE"       from "NEXT"       [2021-04-20 Tue 12:25]
:END:
#+begin_src css :tangle ./code/css/quizz.css
  .quizzes.screen2 {
      width: 60vw;
      display: flex;
      flex-direction: row;
      margin: 42px auto 42px auto;
      justify-content: center;
  }

  .quizz.screen2 {
      width: 90%;
      height: 30vw;
      margin: 14px auto 40% auto;
      display: flex;
      flex-wrap: wrap;
      flex-direction: row;
  }

  ul{
      display:flex;
      flex-direction:column;
      flex-wrap: wrap;
  }

  li{
      display: block;
      /* margin-bottom:20px; */
  }
#+end_src

***** DONE Display of elements inside the atomic-quizz
CLOSED: [2021-04-20 Tue 12:25]
:LOGBOOK:
- State "DONE"       from "NEXT"       [2021-04-20 Tue 12:25]
:END:
#+begin_src css :tangle ./code/css/quizz.css
  .quizzes.screen2 h1 {
      color: #fff;
      background-color: red;
      width: 90%;
      margin: auto;
      height: 10vh;
      font-size: 3vh;
      font-weight: 700;
      text-align: center;
      display: flex;
      flex-direction: column;
      justify-content: center;
  }

  .quizz .img {
      width: calc(50% - 25px);
      margin: 18px 0px;
  }

  .quizz .img:nth-child(odd) {
      margin-right: 50px;
  }

  .quizz .img img {
      width: 100%;
  }

  .quizz .img h2 {
      margin: 6px auto 0px 0px;
      font-weight: 700;
  }
#+end_src

***** DONE Click on image effect  (Third requisite)
CLOSED: [2021-04-20 Tue 15:41]
:LOGBOOK:
- State "DONE"       from "NEXT"       [2021-04-20 Tue 15:41]
- State "DONE"       from "BACKLOG"    [2021-04-20 Tue 12:10]
- State "DONE"       from "NEXT"       [2021-04-20 Tue 12:10]
:END:
#+begin_src css :tangle ./code/css/quizz.css
  .hidden-opacity {
      opacity: 0.5;
      transition: opacity 0.4s ease-in-out;
  }

  .hidden-name {
      opacity: 0;
      transition: opacity 0.4s ease-in-out;
  }

  .card-border {
      border: 2px solid orange;
      transition: border 0.4s ease-in-out;
  }
#+end_src

***** TODO Right/Wrong Anwser (green/red h2)
***** TODO Score page 

** Layout3
